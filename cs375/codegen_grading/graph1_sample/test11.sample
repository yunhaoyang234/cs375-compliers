# ------------------------- begin Your code -----------------------------
	movl	$1,%eax         	#  1 -> %eax
	movl	%eax,-28(%rbp)     	#  %eax -> n
.L0:
	movl	$.LC2,%edi       	#  addr of literal .LC2
	call	write              	#  write()
	movl	-28(%rbp),%eax     	#  n -> %eax
	movl	$1,%ecx         	#  1 -> %ecx
	subl	%ecx,%eax         	#  %eax - %ecx -> %eax
	movl	%eax,-28(%rbp)     	#  %eax -> n
	movl	-28(%rbp),%eax     	#  n -> %eax
	movl	$0,%ecx         	#  0 -> %ecx
	cmpl	%ecx,%eax           	#  compare %eax - %ecx
	je	.L3 			#  jump if     ==
	jmp	.L0 			#  jump 
	jmp	.L4 			#  jump 
.L3:
.L4:
# ----------------------- begin Epilogue code ---------------------------
	movq	%r9, %rbx        # restore %rbx (callee-saved) from %r9
        leave
        ret
        .cfi_endproc
.LFE0:
        .size   graph1, .-graph1
# ----------------- end Epilogue; Literal data follows ------------------
        .section        .rodata
	.align  4
.LC2:
	.string	" "

        .ident  "CS 375 Compiler - Spring 2018"
